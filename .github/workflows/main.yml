            - имя: Развертывание одной виртуальной машины Stackstorm в AWS EC2
  # Вы можете прикрепить к конкретному коммиту или версии.
  # использует: bitovi/github-actions-deploy-stackstorm@ebffc7ffcd172810a848b7aca6c88f81329e1cb4
  использует: bitovi/github-actions-deploy-stackstorm@v0.4.2
  с:
    # Указывает, должно ли это действие извлекать код
    checkout: # необязательно, по умолчанию true
    # Идентификатор ключа доступа AWS
    aws_access_key_id: # необязательно
    # Секретный ключ доступа AWS
    aws_secret_access_key: # необязательно
    # Токен сеанса AWS
    aws_session_token: # необязательно
    # Регион AWS по умолчанию
    aws_default_region: # необязательно
    # Установите для переопределения идентификатора ресурса AWS для развертывания. По умолчанию `${org}-{repo}-{branch}`. Используйте с destroy для уничтожения определенных ресурсов.
    aws_resource_identifier: # необязательно
    # Объект JSON дополнительных тегов, которые будут включены в созданные ресурсы. Пример: `{"key1": "value1", "key2": "value2"}`
    aws_additional_tags: # необязательно
    # Профиль экземпляра AWS IAM для использования с экземпляром EC2
    aws_ec2_iam_instance_profile: # необязательно
    # Тип экземпляра AWS
    aws_ec2_instance_type: # необязательно, по умолчанию t3.medium
    # Определите размер тома (в ГиБ) для корневого тома на экземпляре AWS.
    aws_ec2_instance_root_vol_size: # необязательно, по умолчанию 10
    # Установите значение true, чтобы избежать удаления корневого тома при завершении. По умолчанию — false.
    aws_ec2_instance_root_vol_preserve: # необязательно
    # Создает секрет в менеджере секретов AWS для хранения пары ключей
    aws_ec2_create_keypair_sm: # необязательно
    # Добавлять публичный IP к экземпляру или нет. (Не Elastic IP)
    aws_ec2_instance_public_ip: # необязательно, по умолчанию true
    # Объект JSON дополнительных тегов, которые будут включены в созданные ресурсы. Пример: `{"key1": "value1", "key2": "value2"}`
    aws_ec2_additional_tags: # необязательно
    # Имя пользователя, используемое для автономной аутентификации StackStorm. Установить как секрет в GH Actions.
    st2_auth_имя_пользователя:
    # Пароль, используемый автономной аутентификацией StackStorm. Установить как секрет в GH Actions.
    st2_auth_password:
    # Список пакетов для установки, разделенных запятыми. Если вы изменяете эту опцию, не забудьте также включить `st2` в список.
    st2_packs: # необязательно, по умолчанию st2
    # Относительный путь от корня проекта до файла переменных Ansible. Если вы хотите настроить более расширенную конфигурацию; версию st2, st2.conf, RBAC, chatops, auth и т. д. Полный список настроек см. на странице https://github.com/stackStorm/ansible-st2#variables. Переменные Ansible будут иметь более высокий приоритет над входными данными GHA.
    st2_ansible_extra_vars_file: # необязательно
    # Тег выпуска Stackstorm Ansible для использования. См. https://github.com/StackStorm/ansible-st2/releases
    st2_version_tag: # необязательно
    # Установите значение «true», чтобы уничтожить созданную инфраструктуру AWS для этого экземпляра.
    tf_stack_destroy: # необязательно, по умолчанию false
    # Измените это на что угодно. Будьте осторожны, чтобы быть последовательными. Отсутствующий файл может вызвать воссоздание или перешагивание через уничтожение неопределенных объектов.
    tf_state_file_name: # необязательно
    # Добавить строку в tf-state-file. Установка этого параметра в `unique` приведет к созданию `tf-state-aws-unique`. Может сосуществовать с переменной tf_state_file_name.
    tf_state_file_name_append: # необязательно
    # AWS S3 bucket для использования в состоянии Terraform. По умолчанию `${org}-${repo}-{branch}-tf-state-aws`
    tf_state_bucket: # необязательно
    # Принудительная очистка и удаление S3 tf_state_bucket, определенного. Любой файл, содержащийся там, будет уничтожен. `tf_stack_destroy` также должен быть `true`
    tf_state_bucket_destroy: # необязательно
    # Определите корневое доменное имя для приложения. например, bitovi.com. Если пусто, будет предоставлен URL ELB.
    aws_r53_domain_name: # необязательно
    # Определить часть поддомена URL. По умолчанию `${org}-${repo}-{branch}`
    aws_r53_sub_domain_name: # необязательно
    # Развертывание в корневом домене. Сгенерирует две записи DNS, одну для корня, другую для www
    aws_r53_root_domain_deploy: # необязательно
    # Заставляет приложение использовать сертификат, включив поиск сертификата.
    aws_r53_enable_cert: # необязательно
    # Определите ARN сертификата для использования в приложении
    aws_r53_cert_arn: # необязательно
    # Генерирует и управляет корневым сертификатом для приложения
    aws_r53_create_root_cert: # необязательно
    # Создает и управляет сертификатом поддомена для приложения
    aws_r53_create_sub_cert: # необязательно
    # Объект JSON дополнительных тегов, которые будут включены в созданные ресурсы. Пример: `{"key1": "value1", "key2": "value2"}`
    aws_r53_additional_tags: # необязательно
    # Определите, следует ли создавать VPC
    aws_vpc_create: # необязательно
    # Задайте конкретное имя для VPC
    aws_vpc_name: # необязательно
    # Определить базовый блок CIDR, который делится на блоки CIDR подсети. По умолчанию 10.0.0.0/16.
    aws_vpc_cidr_block: # необязательно
    # Список публичных подсетей, разделенных запятыми. По умолчанию 10.10.110.0/24
    aws_vpc_public_subnets: # необязательно
    # Список частных подсетей, разделенных запятыми. Если нет, то ничего не будет создано.
    aws_vpc_private_subnets: # необязательно
    # Список зон доступности, разделенных запятыми. По умолчанию `aws_default_region.
    aws_vpc_availability_zones: # необязательно
    # AWS VPC ID. Принимает значения `vpc-###`.
    aws_vpc_id: # необязательно
    # Укажите подсеть для использования с экземпляром. Если ничего не указано, выберет одну.
    aws_vpc_subnet_id: # необязательно
    # Включает шлюз NAT
    aws_vpc_enable_nat_gateway: # необязательно
    # Создает только один шлюз NAT
    aws_vpc_single_nat_gateway: # необязательно
    # Список IP-IDS, разделенных запятыми, для повторного использования в шлюзах NAT
    aws_vpc_external_nat_ip_ids: # необязательно
    # Объект JSON дополнительных тегов, которые будут включены в созданные ресурсы. Пример: `{"key1": "value1", "key2": "value2"}`
    aws_vpc_additional_tags: # необязательно
          
